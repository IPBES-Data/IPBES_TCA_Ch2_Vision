---
title: 'Report Assessment Ch5 Subsidies Reform'
subtitle: 'Data Management Report'
author:
  - name: 
        family: Krug
        given: Rainer M.    
    id: rmk
    orcid: 0000-0002-7490-0066
    email: Rainer.Krug@Senckenberg.de, Rainer@Krugs.de
    affiliation: 
      - name: Senckenberg
        city: Frankfurt (Main)
        url: https://www.senckenberg.de/en/institutes/sbik-f/
    roles: [author, editor]
abstract: > 
  A short description what this is about.
  This is not a tracditional abstract, but rather something else ...
# keywords:
#   - aaaaa
#   - bbbbb
license: "CC BY"
copyright: 
  holder: No idea
  year: 2023
citation: 
  type: report
  container-title: IPBES Data Management Report
  doi: XXXXXX
doi: XXXXXX
version: 0.0.1

format:
    html:
        toc: true
        toc-depth: 4
        toc_expand: true
        embed-resources: true
        code-fold: true
        code-summary: 'Show the code'
        grid:
            sidebar-width: 0px
            body-width: 4000px
            margin-width: 200px
            gutter-width: 1.5rem     
---

```{r}
#| label: setup
#| include: false
set.seed(13)

library(tictoc)
library(arrow)
library(dplyr)
library(IPBES.R)
library(openalexR)
library(ggplot2)

# if (!exists("params")) {
#     params <- rmarkdown::yaml_front_matter("Ch5_subsidies_reform.qmd")$params
# }


build <- as.integer(readLines("buildNo"))
build <- build + 1
writeLines(as.character(build), "buildNo")

knitr::opts_chunk$set(message = NA)


st <- readLines(file.path("input", "ch_5_subsidies_reform", "government_financial_support.txt")) |>
    paste(collapse = " ")

gdm_dir <- file.path("gdm_dir") # tempfile()
dir.create(gdm_dir, showWarnings = FALSE, recursive = TRUE)

pages_dir <- file.path(".", "data", "ch_5_subsidies_reform", "pages")
corpus_dir <- file.path("data", "ch_5_subsidies_reform", "corpus")
corpus_tca_dir <- file.path("data", "ch_5_subsidies_reform", "corpus_tca")

# on.exit({
#     unlink(gdm_dir, recursive = TRUE)
# })
```

## Working Title
IPBES_TCA_Ch5_Subsidies_Reform

## Code repo

[Github - private](https://github.com/IPBES-Data/IPBES_TCA_Ch5_Subsidies_Reform)

## Build No: `r build`

%The BuidNo is automatically increased by one each time the report is rendered. It is used to indicate different renderings when the version stays the same%.

# Introduction

### The following steps will be done in documented in this report:

- [ ] Do asearch with [st](input/ch_5_subsidies_refrm/government_financial_support.txt){target=_blank} determine the  number of hits
- [ ] Download Subsidies Corpus
- [ ] Identify works in the subsidies corpus AND TCA corpus



# Methods

The search terms are based on the [shared google doc](https://docs.google.com/document/d/1_FmxYVhpv2Bu2Gbbxb7cWc49f3soFvc64Qau_x2RAqI/edit){target=_blank}. They are cleaned up for the usage in [OpenAlex](https://openalex.org/){target=_blank}.


## `government_financial_support` count from OpenAlex

The search terms is [st](input/ch_5_subsidies_refrm/government_financial_support.txt){target=_blank}

```{r}
#| label: get get_st_count
#|

fn <- file.path("data", "ch_5_subsidies_reform", "st_count.rds")

if (!file.exists(fn)) {
    st_count <- openalexR::oa_fetch(
        title_and_abstract.search = compact(st),
        count_only = TRUE,
        verbose = TRUE
    )[, "count"]

    saveRDS(st_count, fn)
} else {
    st_count <- readRDS(fn)
}
```



## Download Corpus

The corpus download will be stored in `data/pages` and the arrow database in `data/corpus`.

This is not on github!

The corpus can be read by running `read_corpus()` which opens the database so that then it can be fed into a `dplyr` pipeline. After most `dplyr` functions, the actual data needs to be collected via `dplyr::collect()`.

Only then is the actual data read!

Needs to be enabled by setting `eval: true` in the code block below.

```{r}
#| label: download_subsidies_corpus
#| eval: false
#|

tic()

IPBES.R::corpus_download(
    pages_dir = pages_dir,
    title_and_abstract_search = compact(st),
    continue = TRUE,
    delete_pages_dir = FALSE,
    set_size = 1000,
    verbose = FALSE,
    dry_run = TRUE,
    mc_cores = 6
)

toc()
```

Convert downloaded corpus to arrow

```{r}
#| label: convert_subsidies_corpus_arrow
#| eval: false

tic()

IPBES.R::corpus_pages_to_arrow(
    pages_dir = pages_dir,
    arrow_dir = corpus_dir,
    continue = TRUE,
    delete_arrow_dir = FALSE,
    dry_run = FALSE,
    verbose = TRUE,
    mc_cores = 3
)

toc()
```

Create Subsidies Corpus (filtered with TCA Corpus)

```{r}
#| label: narrow_down_subsidies_corpus
#| eval: false
#|

fn <- file.path("data", "ch_5_subsidies_reform", "ids_subs_tca.rds")
if (!file.exists(fn)) {
    ids_subsidies <- read_corpus(corpus_dir) |>
        dplyr::select(id) |>
        collect() |>
        unlist()

    ids_tca <- read_corpus(file.path("..", "IPBES_TCA_Corpus", "data", "tca_corpus", "corpus")) |>
        dplyr::select(id) |>
        collect() |>
        unlist()

    ids_subs_tca <- ids_tca[ids_tca %in% ids_subsidies]

    corpus_filter_ids(
        arrow_dir = corpus_dir,
        arrow_filter_dir = file.path(".", "data", "ch_5_subsidies_reform", "corpus_tca"),
        filter_ids = ids_subs_tca
    )

    saveRDS(ids_subs_tca, file = fn)
} else {
    ids_subs_tca <- readRDS(fn)
}
```


## Export data for sentiment analysis


```{r}
#| label: export_sentiment_analysis
#|

fn <- file.path("data", "ch_5_subsidies_reform", "sent_analysis_subsidies.parquet")
if (!file.exists(fn)) {
    corpus_read(corpus_dir) |>
        dplyr::select(id, publication_year, ab) |>
        dplyr::collect() |>
        arrow::write_parquet(fn)
}

fn <- file.path("data", "ch_5_subsidies_reform", "sent_analysis_subsidies_tca.parquet")
if (!file.exists(fn)) {
    read_corpus(corpus_tca_dir) |>
        dplyr::select(id, publication_year, ab) |>
        dplyr::collect() |>
        arrow::write_parquet(fn)
}
```

## Export 50 random papers for manual analysis

```{r}
#| label: export_random_50
#|


fn <- file.path("data", "ch_5_subsidies_reform", "random_50_subsidies.xlsx")
if (!file.exists(fn)) {
    set.seed(13)
    read_corpus(corpus_dir) |>
        dplyr::select(id, doi, author_abbr, display_name, ab) |>
        dplyr::rename(abstract = ab, title = display_name) |>
        dplyr::collect() |>
        dplyr::slice_sample(n = 50) |>
        writexl::write_xlsx(path = fn)
}


fn <- file.path("data", "ch_5_subsidies_reform", "random_50_subsidies_in_tca.xlsx")
if (!file.exists(fn)) {
    set.seed(13)
    read_corpus(corpus_tca_dir) |>
        dplyr::select(id, doi, author_abbr, display_name, ab) |>
        dplyr::rename(abstract = ab, title = display_name) |>
        dplyr::collect() |>
        dplyr::slice_sample(n = 50) |>
        writexl::write_xlsx(path = fn)
}
```


## Publications over time
```{r}
#| label: publications_over_time_data
## | |

fn <- file.path("data", "ch_5_subsidies_reform", "publications_over_time.rds")

if (!file.exists(fn)) {
    data <- read_corpus(corpus_tca_dir) |>
        dplyr::select(publication_year) |>
        dplyr::arrange(publication_year) |>
        dplyr::collect() |>
        table() |>
        as.data.frame() |>
        mutate(
            publication_year = as.integer(as.character(publication_year)),
            p = Freq / sum(Freq),
            p_cum = cumsum(p)
        ) |>
        rename(
            count = Freq
        ) |>
        dplyr::inner_join(
            y = openalexR::oa_fetch(
                group_by = "publication_year",
                output = "tibble",
                verbose = FALSE
            ) |>
                dplyr::select(
                    key,
                    count
                ) |>
                dplyr::rename(
                    publication_year = key,
                    count_oa = count
                ) |>
                dplyr::arrange(publication_year) |>
                dplyr::mutate(
                    publication_year = as.integer(as.character(publication_year)),
                    p_oa = count_oa / sum(count_oa),
                    p_oa_cum = cumsum(p_oa)
                )
        ) 

    saveRDS(data, fn)
}

```

```{r}
#| label: publications_over_time_figure
#|
if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "publications_over_time")) < 2) {

figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "publications_over_time.rds")) |>
    dplyr::filter(publication_year >= 1900) |>
    ggplot() +
    #
    geom_bar(aes(x = publication_year, y = p), stat = "identity") +
    geom_line(aes(x = publication_year, y = p_cum / 5), color = "red") +
    geom_line(aes(x = publication_year, y = p_oa_cum / 5), color = "blue") +
    #
    geom_line(aes(x = publication_year, y = p_cum / 5), color = "red") +
    geom_line(aes(x = publication_year, y = p_oa_cum / 5), color = "blue") +
    #
    scale_x_continuous(breaks = seq(1900, 2020, 10)) +
    scale_y_continuous(
        "Proportion of publications",
        sec.axis = sec_axis(~ . * 5, name = "Cumulative proportion") # divide by 100 to scale back the secondary axis
    ) +
    labs(
        title = "Publications over time",
        x = "Year",
        y = "Number of publications"
    ) +
    theme_minimal() +
    theme(axis.text.y.right = element_text(color = "red"))

ggplot2::ggsave(
    file.path("figures", "ch_5_subsidies_reform", "publications_over_time.pdf"),
    width = 12,
    height = 6,
    figure
)
ggplot2::ggsave(
    file.path("figures", "ch_5_subsidies_reform", "publications_over_time.png"),
    width = 12,
    height = 6,
    figure
)

rm(figure)
}
```
## Countries of Authors Spatial



```{r}
#| label: publications_per_country_data

fn <- file.path("data", "ch_5_subsidies_reform", "publications_per_country_data.rds")

if (!file.exists(fn)) {
    authors <- IPBES.R::corpus_read(corpus_tca_dir) |>
        dplyr::select(author) |>
        collect() |>
        unlist() |>
        IPBES.R::unserialize_arrow()


    data_first <- authors |>
        IPBES.R::extract_countries(first_only = TRUE) |>
        dplyr::group_by(cc) |>
        dplyr::summarise(count = sum(weight)) |>
        rename(
            iso2c = cc,
            count_first = count
        )

    data <- authors |>
        IPBES.R::extract_countries(first_only = FALSE) |>
        dplyr::group_by(cc) |>
        dplyr::summarise(count = sum(weight)) |>
        rename(
            iso2c = cc,
            count_all = count
        ) |>
        dplyr::full_join(
            x = data_first,
            by = "iso2c"
        )

    rm(data_first, authors)

    data$iso3c <- countrycode::countrycode(
        data$iso2c,
        origin = "iso2c",
        destination = "iso3c"
    )

    data_oa <- openalexR::oa_fetch(
        group_by = "authorships.countries",
        output = "tibble",
        verbose = FALSE
    ) |>
        rename(count_oa = count)

    data_oa$iso3c <- countrycode::countrycode(
        data_oa$key_display_name,
        origin = "country.name",
        destination = "iso3c"
    )

    data_oa <- data_oa |>
        mutate(
            key_display_name = NULL,
            key = NULL
        )

    data |>
        mutate(
            iso2c = NULL
        ) |>
        dplyr::full_join(
            y = data_oa,
            by = "iso3c"
        ) |>
        mutate(
            count_oa = ifelse(is.na(count_oa), 0, count_oa),
            log_count_oa = log(count_oa + 1),
            p_oa = count_oa / sum(count_oa),
            #
            count_first = ifelse(is.na(count_first), 0, count_first),
            log_count_first = log(count_first + 1),
            p_first = count_first / sum(count_first),
            p_first_output = count_first / count_oa,
            p_first_diff = (p_oa - p_first) * 100,
            #
            count_all = ifelse(is.na(count_all), 0, count_all),
            log_count_all = log(count_all + 1),
            p_all = count_all / sum(count_all),
            p_all_output = count_all / count_oa,
            p_all_diff = (p_oa - p_all) * 100,
        ) |>
        dplyr::arrange(
            iso3c
        ) |>
        dplyr::relocate(
            iso3c,
            everything()
        ) |>
        saveRDS(file = fn)
}
```


```{r}
#| label: publications_per_country_author_map
#|

if (length(list.files(path = file.path("maps", "ch_5_subsidies_reform"), pattern = "publications_countries")) < 2) {
    data <- readRDS(file.path("data", "ch_5_subsidies_reform", "publications_per_country_data.rds"))

    map <- patchwork::wrap_plots(
        data |> map_country_codes(
            map_type = "countries",
            values = "count_oa",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("count of overall publications (count_oa)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "count_first",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("count of TCA publications (count_first)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "count_all",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("count of TCA publications (count_all)"),
        ####
        data |> map_country_codes(
            map_type = "countries",
            values = "log_count_oa",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("log(count + 1) of overall publications (log_count_oa)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "log_count_first",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("log(count + 1) of TCA publications (log_count_first)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "log_count_all",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("log(count + 1) of TCA publications (log_count_all)"),
        ####
        data |> map_country_codes(
            map_type = "countries",
            values = "p_oa",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("Overall research output (p_oa)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "p_first",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("TCA research output (p_first)"),
        #
        data |> map_country_codes(
            map_type = "countries",
            values = "p_all",
            geodata_path = gdm_dir
        ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", high = "#56B4E9") +
            ggplot2::ggtitle("TCA research output (p_all)"),
        ####
        ggplot() +
            theme_void(),
        data |>
            map_country_codes(
                map_type = "countries",
                values = "p_first_diff",
                geodata_path = gdm_dir
            ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
            ggplot2::ggtitle("difference (TCA - overall) output (p_oa - p_first)"),
        #
        data |>
            map_country_codes(
                map_type = "countries",
                values = "p_all_diff",
                geodata_path = gdm_dir
            ) +
            ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
            ggplot2::ggtitle("difference (TCA - overall) output (p_oa - p_all)"),
        ncol = 3
    )

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "publications_countries.pdf"),
        width = 12,
        height = 8,
        map
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "publications_countries.png"),
        width = 12,
        height = 8,
        map
    )
}
```

## Sentiment Analysis

### Spatial


```{r}
#| label: sentiment_per_countries_data
#|

fn <- file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds")

if (!file.exists(fn)) {
    data <- read_corpus(corpus_tca_dir) |>
        dplyr::select(id, author) |>
        collect() |>
        mutate(
            author = IPBES.R::unserialize_arrow(author),
            iso2c = IPBES.R::extract_countries(author, return_all = TRUE)$cc,
            author = NULL
        ) |>
        mutate(
            iso3c = countrycode::countrycode(
                iso2c,
                origin = "iso2c",
                destination = "iso3c"
            ),
            iso2c = NULL
        ) |>
        dplyr::left_join(
            readRDS(file.path("input", "ch_5_subsidies_reform", "SentAnalysis_Scores.rds")),
            by = "id"
        ) |>
        dplyr::group_by(iso3c) |>
        dplyr::summarize(
            mean_neg = mean(neg, na.rm = TRUE),
            mean_neu = mean(neu, na.rm = TRUE),
            mean_pos = mean(pos, na.rm = TRUE),
            mean_compound = mean(compound, na.rm = TRUE),
            n = n()
        ) |>
        dplyr::arrange(
            dplyr::desc(mean_neg)
        ) |>
        saveRDS(file = fn)
}
```


```{r}
#| label: sentiment_neu_per_countries_map
#|

if (length(list.files(path = file.path("maps", "ch_5_subsidies_reform"), pattern = "sentiment_neu_per_countries")) < 4) {
    data <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds"))

    map <- data |>
        map_country_codes(
            map_type = "countries",
            values = "mean_neu",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean neutral sentiment (0 - 1) - all countries")

    map_sel <- data |>
        dplyr::filter(n > 10) |>
        map_country_codes(
            map_type = "countries",
            values = "mean_neu",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean neutral sentiment (0 - 1) - more than 10 works")

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_all.pdf"),
        width = 12,
        height = 8,
        map
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_all.png"),
        width = 12,
        height = 8,
        map
    )

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_10.pdf"),
        width = 12,
        height = 8,
        map_sel
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_10.png"),
        width = 12,
        height = 8,
        map_sel
    )

    rm(map, data)
}
```


```{r}
#| label: sentiment_pos_per_countries_map
#|

if (length(list.files(path = file.path("maps", "ch_5_subsidies_reform"), pattern = "sentiment_pos_per_countries")) < 4) {
    data <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds"))

    map <- data |>
        map_country_codes(
            map_type = "countries",
            values = "mean_pos",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean positive sentiment (0 - 1) - all countries")

    map_sel <- data |>
        dplyr::filter(n > 10) |>
        map_country_codes(
            map_type = "countries",
            values = "mean_pos",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean positive sentiment (0 - 1) - more than 10 works")

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_all.pdf"),
        width = 12,
        height = 8,
        map
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_all.png"),
        width = 12,
        height = 8,
        map
    )

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_10.pdf"),
        width = 12,
        height = 8,
        map_sel
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_10.png"),
        width = 12,
        height = 8,
        map_sel
    )

    rm(map, data)
}
```

```{r}
#| label: sentiment_neg_per_countries_map
#|
if (length(list.files(path = file.path("maps", "ch_5_subsidies_reform"), pattern = "sentiment_neg_per_countries")) < 4) {
    data <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds"))

    map <- data |>
        map_country_codes(
            map_type = "countries",
            values = "mean_neg",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean negative sentiment (0 - 1) - all countries")

    map_sel <- data |>
        dplyr::filter(n > 10) |>
        map_country_codes(
            map_type = "countries",
            values = "mean_pos",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean negative sentiment (0 - 1) - more than 10 works")

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_10.pdf"),
        width = 12,
        height = 8,
        map
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_10.png"),
        width = 12,
        height = 8,
        map
    )

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_all.pdf"),
        width = 12,
        height = 8,
        map_sel
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_all.png"),
        width = 12,
        height = 8,
        map_sel
    )

    rm(map, data)
}
```



```{r}
#| label: sentiment_compound_per_countries_map
#|

if (length(list.files(path = file.path("maps", "ch_5_subsidies_reform"), pattern = "sentiment_comp_per_countries")) < 4) {
    data <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds"))

    map <- data |>
        map_country_codes(
            map_type = "countries",
            values = "mean_compound",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean compound sentiment (-1: negative; 1: positive) - all countries")

    map_sel <- data |>
        dplyr::filter(n > 10) |>
        map_country_codes(
            map_type = "countries",
            values = "mean_compound",
            geodata_path = gdm_dir
        ) +
        ggplot2::scale_fill_gradient2(low = "#E69F00", mid = "white", high = "#56B4E9", midpoint = 0) +
        ggplot2::ggtitle("Mean compound sentiment (-1: negative; 1: positive) - more than 10 works")

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_all.pdf"),
        width = 12,
        height = 8,
        map
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_all.png"),
        width = 12,
        height = 8,
        map
    )

    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_10.pdf"),
        width = 12,
        height = 8,
        map_sel
    )
    ggplot2::ggsave(
        file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_10.png"),
        width = 12,
        height = 8,
        map_sel
    )

    rm(map, data)
}
```


### Timeseries

```{r}
#| label: sentiments_over_time_data
#|

fn <- file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")

if (!file.exists(fn)) {
    data <- readRDS(file.path("input", "ch_5_subsidies_reform", "SentAnalysis_Scores.rds")) |>
        dplyr::group_by(year) |>
        dplyr::summarize(
            neg = mean(neg),
            neu = mean(neu),
            pos = mean(pos),
            compound = mean(compound),
            n = n()
        ) |>
        dplyr::filter(
            n > 10
        ) |>
        saveRDS(file = fn)
}
```

```{r}
#| label: sentiments_over_time_all_figure
#|

if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_over_time")) < 2) {
    figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
        tidyr::pivot_longer(cols = c(neg, neu, pos, compound), names_to = "type", values_to = "value") |>
        ggplot2::ggplot() +
        ggplot2::geom_line(aes(x = year, y = value, color = type, linetype = type)) +
        ggplot2::scale_color_manual(values = c("black", "red", "blue", "green")) +
        ggplot2::labs(
            title = "Sentiment Analysis Scores (n > 10)",
            x = "Year",
            y = "Score",
            color = "Type",
            linetype = "Type"
        ) +
        ggplot2::theme_minimal()


    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time.pdf"),
        width = 12,
        height = 6,
        figure
    )
    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time.png"),
        width = 12,
        height = 6,
        figure
    )

    rm(figure)
}
```

```{r}
#| label: sentiments_over_time_table_neg_pos_figure
#|

if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_over_time_neg_pos")) < 2) {

figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
    tidyr::pivot_longer(cols = c(neg, pos), names_to = "type", values_to = "value") |>
    ggplot2::ggplot() +
    ggplot2::geom_line(aes(x = year, y = value, color = type, linetype = type)) +
    ggplot2::scale_color_manual(values = c("black", "red", "blue", "green")) +
    ggplot2::labs(
        title = "Sentiment Analysis Scores (n > 10)",
        x = "Year",
        y = "Score",
        color = "Type",
        linetype = "Type"
    ) +
    ggplot2::theme_minimal()


ggplot2::ggsave(
    file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time_neg_pos.pdf"),
    width = 12,
    height = 6,
    figure
)
ggplot2::ggsave(
    file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time_neg_pos.png"),
    width = 12,
    height = 6,
    figure
)

rm(figure)

}
```

```{r}
#| label: sentiments_neg_over_time_figure
#|

if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_neg_over_time")) < 2) {
    figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
        ggplot2::ggplot() +
        ggplot2::geom_line(ggplot2::aes(x = year, y = neg)) +
        ggplot2::labs(
            title = "Sentiment Analysis negative Score (n > 10)",
            x = "Year",
            y = "Negative score"
        ) +
        ggplot2::theme_minimal()

    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_neg_over_time.pdf"),
        width = 12,
        height = 6,
        figure
    )
    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_neg_over_time.png"),
        width = 12,
        height = 6,
        figure
    )

    rm(figure)
}
```

```{r}
#| label: sentiments_neu_over_time_figure
#|
if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_neu_over_time")) < 2) {
    figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
        ggplot2::ggplot() +
        ggplot2::geom_line(ggplot2::aes(x = year, y = neu)) +
        ggplot2::labs(
            title = "Sentiment Analysis neutral Score (n > 10)",
            x = "Year",
            y = "Neutral score"
        ) +
        ggplot2::theme_minimal()

    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_neu_over_time.pdf"),
        width = 12,
        height = 6,
        figure
    )
    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_neu_over_time.png"),
        width = 12,
        height = 6,
        figure
    )

    rm(figure)
}
```


```{r}
#| label: sentiments_pos_over_time_figure
#|

if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_pos_over_time")) < 2) {
    figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
        ggplot2::ggplot() +
        ggplot2::geom_line(ggplot2::aes(x = year, y = pos)) +
        ggplot2::labs(
            title = "Sentiment Analysis positive Score (n > 10)",
            x = "Year",
            y = "Positive score"
        ) +
        ggplot2::theme_minimal()

    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_pos_over_time.pdf"),
        width = 12,
        height = 6,
        figure
    )
    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_pos_over_time.png"),
        width = 12,
        height = 6,
        figure
    )

    rm(figure)
}
```


```{r}
#| label: sentiments_comp_over_time_figure
#|
if (length(list.files(path = file.path("figures", "ch_5_subsidies_reform"), pattern = "sentiments_comp_over_time")) < 2) {
    figure <- readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_timeseries.rds")) |>
        ggplot2::ggplot() +
        ggplot2::geom_line(ggplot2::aes(x = year, y = compound)) +
        ggplot2::labs(
            title = "Sentiment Analysis Compound Score (n > 10)",
            x = "Year",
            y = "Compound score"
        ) +
        ggplot2::theme_minimal()

    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_comp_over_time.pdf"),
        width = 12,
        height = 6,
        figure
    )
    ggplot2::ggsave(
        file.path("figures", "ch_5_subsidies_reform", "sentiments_comp_over_time.png"),
        width = 12,
        height = 6,
        figure
    )

    rm(figure)
}
```


# Results

## Number of hits

The number of hits are hits of the terms of the whole of the OpenAlex corpus. Due to methodological issues, the number of `R1 AND R2` are overestimates and contain some double counting.

- **`government_financial_subsidies`** in OpenAlex: `r formatC(st_count, format="f", big.mark=",", digits=0)` hits
- **`government_financial_subsidies`** in downloaded corpus: `r formatC(nrow(IPBES.R::corpus_read(corpus_dir)), format="f", big.mark=",", digits=0)` hits
- **Subsidies corpus**: `r formatC(nrow(IPBES.R::corpus_read(corpus_tca_dir)), format="f", big.mark=",", digits=0)` hits

## Manual review 50 paper

The file contains the `id`, `doi`, `author_abbr` and `abstract` of the papers. Two samples were generated:

<!-- - works in the subsidies corpus which can be downloded [here](random_50_subsidies.xlsx){target=_blank}.  -->
- works in the subsidies corpus AND in the TCA corpus which can be downloded [here](data/ch_5_subsidies_reform/random_50_subsidies_in_tca.xlsx){target=_blank}. 



## Publications over time

The red line is the cumulative proportion of publications, the blue line the cumulative proportion of all of the OpenAlex corpus. Both use the secondeary (red) axis.




![](`r file.path("figures", "ch_5_subsidies_reform", "publications_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "publications_over_time.pdf")`){target="_blank"}

```{r}
#| label: publications_per_year_table
readRDS(file.path("data", "ch_5_subsidies_reform", "publications_over_time.rds")) |> 
IPBES.R::table_dt(fn = "publications_per_year")
```

## Map Countries of Author Affiliations
 Distribution of the author affiliation countries
 
 The following calculations were done (count refers to the count of works per country in the subsidies corpus, count_oa to the count of works per country in the OpenAlex corpus):


- `**count** = ifelse(is.na(count), 0, count)`
- `**log_count** = log(count + 1)`
- `**p** = count / sum(count)`
- `**p_output** = count / count_oa`
- `**p_diff** = (p_oa - p) * 100`

These are based on three different counts:
- `**count_oa**`: Count of first authors all papers in the Open Alex Corpus per country
- `**count_first**`: Count of first authors all papers in the Subsidies Corpus per country
- `**count_all**`: Count of first authors of all papers in the Subsidies Corpus per country, weighted by `1/NO_AUTHORS_PER_PAPER`


![Countries of the works in different corpi. Left column: first author Open Alex Corpus; Middle Column: first author Subsidies Corpus; Right column: All authors weighted by inverse number of authors per paper of Subsidies Corpus" "](`r file.path("maps", "ch_5_subsidies_reform", "publications_countries.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "publications_countries.pdf")`){target="_blank"}

```{r}
#| label: map_countries_table
#|

readRDS(file.path("data", "ch_5_subsidies_reform", "publications_per_country_data.rds")) |>
    IPBES.R::table_dt(fn = "countries_first_author", fixedColumns = list(leftColumns = 2))
```


## Sentiment Analysis

Two `.parquet` files containing the `id`, `publication_year` and `ab` (abstract) were extracted and are available upon request due to their size.

For analyzing the sentiments of the provided abstracts, we have used the Python NLTK package, and VADER (Valence Aware Dictionary for Sentiment Reasoning) which is an NLTK module that provides sentiment scores based on the words used. VADER is a pre-trained, rule-based sentiment analysis model in which the terms are generally labeled as per their semantic orientation as either positive or negative.

The main advantage/reason for using this model was that it doesn't require a labbed training dataset.
The output of the model is 4 statistical scores: 

- **compound**: composite score that summarizes the overall sentiment of the text, where scores close to 1 indicate a positive sentiment, scores close to -1 indicate a negative sentiment, and scores close to 0 indicate a neutral sentiment
- **negative**: percentage of negative sentiments in the text 
- **neutral**: percentage of neutral sentiments in the text
- **positive**: percentage of positive sentiments in the text

```{r}
#| label: sentiment_analysis_table
#|

readRDS(file.path("input", "ch_5_subsidies_reform", "SentAnalysis_Scores.rds")) |>
    IPBES.R::table_dt(fn = "sentiment_scores", fixedColumns = list(leftColumns = 2))
```

Here is the per country table

```{r}
#| label: sentiments_countries_table
#|

readRDS(file.path("data", "ch_5_subsidies_reform", "sentAnalysis_scores_countries.rds")) |>
    IPBES.R::table_dt(fn = "sentiments_comp_over_time")
rm(data)
```

### Sentiments Over Time

This graphs shows the sentiment scores of the sentiment analysis over time.


![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time.pdf")`){target="_blank"}


For clarity, here only the positive and egative sentiments.

![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time_neg_pos.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_over_time_neg_pos.pdf")`){target="_blank"}


### Negative Sentiment

#### Over Time

This graphs shows the **negative score** of the sentiment analysis over time. It only 


![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_neg_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_neg_over_time.pdf")`){target="_blank"}


#### Per country

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_all.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_all.pdf")`){target="_blank"}

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_10.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neg_per_countries_10.pdf")`){target="_blank"}


### Neutral Sentiment

#### Over Time

This graphs shows the **compound score** of the sentiment analysis over time. It only 



![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_neu_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_neu_over_time.pdf")`){target="_blank"}


#### Per country


![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_all.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_all.pdf")`){target="_blank"}

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_10.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_10.pdf")`){target="_blank"}




### Positive Sentiment

#### Over Time

This graphs shows the **compound score** of the sentiment analysis over time. It only 

![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_pos_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_pos_over_time.pdf")`){target="_blank"}

#### Per country

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_all.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_all.pdf")`){target="_blank"}

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_pos_per_countries_10.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_neu_per_countries_10.pdf")`){target="_blank"}




### Compound Sentiment

#### Over Time

This graphs shows the **compound score** of the sentiment analysis over time. It only 

![](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_comp_over_time.png")`)

To download high resolution, [click here](`r file.path("figures", "ch_5_subsidies_reform", "sentiments_comp_over_time.pdf")`){target="_blank"}

#### Per country


![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_all.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_all.pdf")`){target="_blank"}

![](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_10.png")`)

To download high resolution, [click here](`r file.path("maps", "ch_5_subsidies_reform", "sentiment_comp_per_countries_10.pdf")`){target="_blank"}

