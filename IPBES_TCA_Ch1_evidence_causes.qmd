---
title: 'Chapter 1 Evidence Causes - Technical Background Report'
subtitle: 'IPBES Transformative Change Assessment'
author:
  - name: 
        family: Krug
        given: Rainer M,
        id: rmk
    orcid: 0000-0002-7490-0066
    email: Rainer@Krugs.de
    roles: [author, editor]
  - name: 
        family:  Leventon
        given: Julia    
    id: sv
    orcid: 0000-0002-2447-8522
    roles: [author] 
  - name: 
        family: Gurung
        given: Janita   
    id: ls
    orcid: 0000-0003-1053-4412
    roles: [author] 
  - name: 
        family: Wickson
        given: Fern 
    id: rgv
    orcid: 
    roles: [author] 
#   - name: 
#         family: Agrawal
#         given: Arun    
#     id: aa
#     orcid: 0000-0001-6796-2958
#     roles: [author] 
#   - name: 
#         family: O'Brien
#         given: Karen    
#     id: ok
#     orcid: 
#     roles: [author] 
#   - name: 
#         family: Garibaldi
#         given: Lucas    
#     id: 
#     orcid: 0000-0002-7032-8330
#     roles: [author] 
license: "CC BY"
copyright: 
  holder: No idea
  year: 2024
citation: 
  type: report
  container-title: 'IPBES Transformative Change Assessment'
  doi: 10.5281/zenodo.11389482
doi: 10.5281/zenodo.11389482
version: 2.0.0
format:
    html:
        toc: true
        toc-depth: 4
        toc_expand: true
        embed-resources: true
        code-fold: true
        code-summary: 'Show the code'
        grid:
            sidebar-width: 0px
            body-width: 4000px
            margin-width: 200px
            gutter-width: 1.5rem 
params:
    fn_count: !expr file.path("ch1_evidence_causes", "data", "count.rds")
    fn_corpus_6: !expr file.path("ch1_evidence_causes", "data", "corpus_6.rds") 
    fn_corpus_6_xlsx:  !expr file.path("ch1_evidence_causes", "data", "corpus_6_all.xlsx") 
---

[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.11389482.svg)](https://doi.org/10.5281/zenodo.11389482)
[![GitHub release](https://img.shields.io/github/release/IPBES-Data/IPBES_TCA_Corpus.svg)](https://github.com/IPBES-Data/IPBES_TCA_Corpus/releases/latest)
[![License: CC BY 4.0](https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)

Part of the Data Management Report [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.10251349.svg)](https://doi.org/10.5281/zenodo.10251349)

# Disclaimer
This document is part of the Thematic assessment of the underlying causes of biodiversity loss, determinants of transformative change and options for achieving the 2050 vision for biodiversity. It is a technical background document to the [Data Management Report for the Transformative Change Assessment Corpus](https://doi.org/10.5281/zenodo.10251349). This document is a working document which is not approved by the Plenary. For statements please see the approved version of the assessment. This document has the sole purpose to document the workflows used to obtain some statements, figures and maps, to document the source of the data and to make the process reproducible.

# Contributors
<!-- ## Assessment Experts

- Shannon, Lynne
- Liao, Chuan
- Zinngrebe, Yves [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0003-1731-2222) 
- Frantzeskaki, Niki [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0002-6983-448X)
- Gurung, Janita [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0003-1053-4412)
- Leventon, Julia [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0002-2447-8522) 
- Wickson, Fern
- Biggs, Oonsie
- Bennett, Elena
- CalderÃ³n-Contreras, Rafael [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0001-8709-4502)
- Gosnell, Hannah
- Cantu Fernandez, Mariana
- Carr, Edward [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0001-7784-471X)
- Benessaiah, Karina [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0001-9959-554X) -->

## Data and Knowledge tsu

- Niamir, Aidin [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0003-4511-3407)
- Gudde, Renske  [![ORCID](./images/ORCID-iD_icon-16x16.png)](https://orcid.org/0000-0003-4727-1011)

```{r}
#| label: setup
#| include: false

if (!exists("params")) {
    params <- rmarkdown::yaml_front_matter("IPBES_TCA_Ch1_evidence_causes.qmd")$params
}

build <- as.integer(readLines(file.path("ch1_evidence_causes", "buildNo")))
build <- build + 1
writeLines(as.character(build), file.path("ch1_evidence_causes", "buildNo"))

knitr::opts_chunk$set(message = NA)

library(openalexR)
library(arrow)
library(dplyr)
library(IPBES.R)
library(tictoc)

if (!require("plantuml")) {
    install.packages("plantuml", repos = c("https://rkrug.r-universe.dev", "https://cran.r-project.org"))
    library(plantuml)
}

plantuml::server_set("remote")

ethical_st <- readLines(file.path("ch1_evidence_causes", "input", "ethical.txt")) |>
    paste(collapse = " ")

concepts_1_st <- readLines(file.path("ch1_evidence_causes", "input", "concepts_1.txt")) |>
    paste(collapse = " ")

concepts_2_st <- readLines(file.path("ch1_evidence_causes", "input", "concepts_2.txt")) |>
    paste(collapse = " ")

narrowed_tca_st <- readLines(file.path("ch1_evidence_causes", "input", "narrowed_tca.txt")) |>
    paste(collapse = " ")

criteria_1_st <- readLines(file.path("ch1_evidence_causes", "input", "criteria_1.txt")) |>
    paste(collapse = " ")

criteria_2_st <- readLines(file.path("ch1_evidence_causes", "input", "criteria_2.txt")) |>
    paste(collapse = " ")

criteria_3_st <- readLines(file.path("ch1_evidence_causes", "input", "criteria_3.txt")) |>
    paste(collapse = " ")

criteria_4_st <- readLines(file.path("ch1_evidence_causes", "input", "criteria_4.txt")) |>
    paste(collapse = " ")

biodiv_loss_1_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_1.txt")) |>
    paste(collapse = " ")

biodiv_loss_2_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_2.txt")) |>
    paste(collapse = " ")

biodiv_loss_3_1_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_3_1.txt")) |>
    paste(collapse = " ")

biodiv_loss_3_2_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_3_2.txt")) |>
    paste(collapse = " ")

biodiv_loss_3_3_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_3_3.txt")) |>
    paste(collapse = " ")

biodiv_loss_3_4_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_3_4.txt")) |>
    paste(collapse = " ")

biodiv_loss_3_5_st <- readLines(file.path("ch1_evidence_causes", "input", "biodiv_loss_3_5.txt")) |>
    paste(collapse = " ")

# pages_dir <- file.path(".", "ch1_evidence_causes", "data", "pages")
# arrow_dir <- file.path(".", "ch1_evidence_causes", "data", "corpus")
# arrow_tca_dir <- file.path(".", "ch1_evidence_causes", "data", "corpus_tca")

##########

nature_st <- readLines(file.path("tca_corpus", "input", "search terms", "nature.txt")) |>
    paste(collapse = " ")

tfc_st <- readLines(file.path("tca_corpus", "input", "search terms", "tfc.txt")) |>
    paste(collapse = " ")

st_1_nat <- compact(paste0("(", nature_st, ") AND (", biodiv_loss_1_st, ") AND (", biodiv_loss_2_st, ")"))
st_2_tca <- compact(paste0("(", narrowed_tca_st, ") AND (", biodiv_loss_1_st, ") AND (", biodiv_loss_2_st, ")"))
st_3_nat <- compact(paste0("(", nature_st, ") AND (", narrowed_tca_st, ") AND (", biodiv_loss_1_st, ") AND (", biodiv_loss_2_st, ")"))

tca_corpus_st <- paste("(", nature_st, ") AND (", tfc_st, ")")


calc_count <- !file.exists(params$fn_count)
if (!calc_count) {
    count <- readRDS(params$fn_count)
} else {
    count <- list(
        timestamp = Sys.time()
    )
}

if (file.exists(params$fn_corpus_6)) {
    corpus_6 <- readRDS(params$fn_corpus_6)
} else {
    corpus_6 <- list(
        timestamp = Sys.time()
    )
}
```


# Download of Data Files from Zenodo

The `data` folder is also available in a separate deposit at [10.5281/zenodo.11389148](https://doi.org/10.5281/zenodo.11389148).

To guarantee reproducibility, it will be downloaded and extracted when the folder `ch1_evidence_causes/data` does not exist

All code to re-generate the data is included, but it might take a long time to run and produce different numbers as OpenAlex is updated continously.

Disable this block and delete all content in the folder `ch1_evidence_causes/data` to re-generate the data. The folder `ch1_evidence_causes/data` has to exist.

This code will only work after the approval of the assessment by the Plenary as the repository will remain confidential before.

```{r}
#| label: download_data
#| eval: true 

dn <- file.path("ch1_evidence_causes", "data")
if (!dir.exists(dn)) {
    dir.create(dn)
    url <- paste0("https://zenodo.org/record/", "11389148", "/files/data.zip")
    destfile <- tempfile(fileext = ".zip")
    download.file(url, destfile)

    unzip(destfile, exdir = "data")
}
```

## Working Title
IPBES_TCA_Ch1_evidence_causes

## Code repo

- [Github repository](https://github.com/IPBES-Data/IPBES_TCA_Corpus/tree/DMR_final)
- [Google Doc with search terms and questions](https://docs.google.com/document/d/1OHK7TKwN11XazDNLJbADmmhYRXdlMKVJBtqTRpX3S-A/edit)

## Build No: `r build`

The BuidNo is automatically increased by one each time the report is rendered. It is used to indicate different renderings when the version stays the same.

# Introduction

## Overview Diagram

![Overview of the analysis and results.](ch1_evidence_causes/figures/Ch1_evidence_causes.svg){width=100% height=100%}

- To download a png, [click here](ch1_evidence_causes/figures/Ch1_evidence_causes.png){target="_blank"}.
- To download a high resolution pdf, [click here](ch1_evidence_causes/figures/Ch1_evidence_causes.pdf){target="_blank"}.
- To download a high resolution svg, [click here](ch1_evidence_causes/figures/Ch1_evidence_causes.svg){target="_blank"}.

All searches are done on OpenAlex directly. 
The downloaded TCA Corpus is not used directly due to methodological and technical limitations.

## The following steps will be done in documented in this report:

See [Google Doc with search terms and questions](https://docs.google.com/document/d/1OHK7TKwN11XazDNLJbADmmhYRXdlMKVJBtqTRpX3S-A/edit) for details.

# Methods

```{r}
#| label: get_corpus_count
#| eval: !expr "calc_count"


count$nature_corpus <- openalexR::oa_fetch(
    title_and_abstract.search = nature_st,
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

count$tca_corpus <- openalexR::oa_fetch(
    title_and_abstract.search = compact(tca_corpus_st),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```

## 1. Ethical arguments for transformative change

The search terms is [ethical](ch1_evidence_causes/input/ethical.txt){target=_blank}
on **OpenAlex**.

```{r}
#| label: get_vision_count
#| eval: !expr "calc_count"

count$ethical <- openalexR::oa_fetch(
    title_and_abstract.search = ethical_st,
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```

The second search terms is [ethical](ch1_evidence_causes/input/ethical.txt){target=_blank} [ethical](ch1_evidence_causes/input/ethical.txt){target=_blank}
on **TCA Corpus**.

```{r}
#| label: get_ethical_tca_count
#| eval: !expr "calc_count"
#|

count$ethical_tca <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", ethical_st, ") AND (", tca_corpus_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```


## 2. Assessing broader biodiversity concepts

The search terms is [concepts_1](ch1_evidence_causes/input/concepts_1.txt){target=_blank}
Open Alex search.

The [concepts_1](ch1_evidence_causes/input/concepts_1.txt){target=_blank} search returns a subset of the [nature corpus](tca_corpus/input/search terms/nature.txt){target=_blank} as `biodiversity` is a subset of the nature corpus. Therefore, it is not necessary to subset the nature corpus and the search can be done on the complete OpenAlex corpus.
.
```{r}
#| label: get_concepts_1_count
#| eval: !expr "calc_count"
#|

count$concepts_1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", nature_st, ") AND (", concepts_1_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```


```{r}
#| label: get_concepts_2_count
#| eval: !expr "calc_count"
#|

count$concepts_2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", nature_st, ") AND (", concepts_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```

Assessing the broader biodiversity concepts by searching for [concepts_1 corpus](ch1_evidence_causes/input/concepts_1.txt){target=_blank} AND [concepts_2 corpus](ch1_evidence_causes/input/concepts_2.txt){target=_blank}

```{r}
#| label: get_concepts_1_2_nature_count
#| eval: !expr "calc_count"
#|

count$concepts_1_2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", nature_st, ") AND (", concepts_1_st, ") AND (", concepts_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```



## 3. Assessing disciplinary bias in the nature corpus

Skipped

## 4. Narrowed transformative change corpus

Here the term [narrowed_tca](ch1_evidence_causes/input/narrowed_tca.txt){target=_blank} is used to narrow down the TCA corpus.

```{r}
#| label: get_narrowed_tca_count
#| eval: !expr "calc_count"
#|

count$narrowed_tca <- openalexR::oa_fetch(
    title_and_abstract.search = compact(narrowed_tca_st),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

count$narrowed_tca_tca <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", tca_corpus_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

##########

set.seed(13)
data <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", tca_corpus_st, ")")),
    options = list(
        select = c(
            "id",
            "doi",
            "authorships",
            "publication_year",
            "display_name",
            "abstract_inverted_index"
        ),
        sample = 250,
        seed = 13
    ),
    count_only = FALSE,
    output = "tibble",
    verbose = TRUE
) |> dplyr::mutate(
    ab = substr(ab, 1, 5000)
)

data$author_abbr <- IPBES.R::abbreviate_authors(data)

data |>
    dplyr::select(
        id,
        doi,
        author = author_abbr,
        title = display_name,
        abstract = ab
    ) |>
    writexl::write_xlsx(path = file.path("ch1_evidence_causes", "data", "samples_4.2_narrowed_tca.xlsx"))
rm(data)

##########


count$narrowed_tca_nature <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", nature_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
```

## 5. Assessing criteria in the narrowed TFC corpus

Here the terms about criteria are used:
- [criteria_1](ch1_evidence_causes/input/criteria_1.txt){target=_blank}
- [criteria_2](ch1_evidence_causes/input/criteria_2.txt){target=_blank}
- [criteria_3](ch1_evidence_causes/input/criteria_3.txt){target=_blank}
- [criteria_4](ch1_evidence_causes/input/criteria_4.txt){target=_blank}

```{r}
#| label: get_narrowed_tca_criteria_criteria_count
#| eval: !expr "calc_count"
#|

count$narrowed_tca_c1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_1_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

##########

set.seed(13)
data <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_1_st, ")")),
    options = list(
        select = c(
            "id",
            "doi",
            "authorships",
            "publication_year",
            "display_name",
            "abstract_inverted_index"
        ),
        sample = 250,
        seed = 13
    ),
    count_only = FALSE,
    output = "tibble",
    verbose = TRUE
) |> dplyr::mutate(
    ab = substr(ab, 1, 5000)
)

data$author_abbr <- IPBES.R::abbreviate_authors(data)

data |>
    dplyr::select(
        id,
        doi,
        author = author_abbr,
        title = display_name,
        abstract = ab
    ) |>
    writexl::write_xlsx(path = file.path("ch1_evidence_causes", "data", "samples_5.1_narrowed_criteria1.xlsx"))
rm(data)

##########

count$narrowed_tca_c2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

##########

set.seed(13)
data <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_2_st, ")")),
    options = list(
        select = c(
            "id",
            "doi",
            "authorships",
            "publication_year",
            "display_name",
            "abstract_inverted_index"
        ),
        sample = 250,
        seed = 13
    ),
    count_only = FALSE,
    output = "tibble",
    verbose = TRUE
) |> dplyr::mutate(
    ab = substr(ab, 1, 5000)
)

data$author_abbr <- IPBES.R::abbreviate_authors(data)

data |>
    dplyr::select(
        id,
        doi,
        author = author_abbr,
        title = display_name,
        abstract = ab
    ) |>
    writexl::write_xlsx(path = file.path("ch1_evidence_causes", "data", "samples_5.2_narrowed_criteria2.xlsx"))
rm(data)

##########

count$narrowed_tca_c3 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ")  AND (", criteria_3_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

##########

set.seed(13)
data <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_3_st, ")")),
    options = list(
        select = c(
            "id",
            "doi",
            "authorships",
            "publication_year",
            "display_name",
            "abstract_inverted_index"
        ),
        sample = 250,
        seed = 13
    ),
    count_only = FALSE,
    output = "tibble",
    verbose = TRUE
) |> dplyr::mutate(
    ab = substr(ab, 1, 5000)
)

data$author_abbr <- IPBES.R::abbreviate_authors(data)

data |>
    dplyr::select(
        id,
        doi,
        author = author_abbr,
        title = display_name,
        abstract = ab
    ) |>
    writexl::write_xlsx(path = file.path("ch1_evidence_causes", "data", "samples_5.3_narrowed_criteria3.xlsx"))
rm(data)

##########

count$narrowed_tca_c4 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_4_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

##########

set.seed(13)
data <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", narrowed_tca_st, ") AND (", criteria_4_st, ")")),
    options = list(
        select = c(
            "id",
            "doi",
            "authorships",
            "publication_year",
            "display_name",
            "abstract_inverted_index"
        ),
        sample = 250,
        seed = 13
    ),
    count_only = FALSE,
    output = "tibble",
    verbose = TRUE
) |> dplyr::mutate(
    ab = substr(ab, 1, 5000)
)

data$author_abbr <- IPBES.R::abbreviate_authors(data)

data |>
    dplyr::select(
        id,
        doi,
        author = author_abbr,
        title = display_name,
        abstract = ab
    ) |>
    writexl::write_xlsx(path = file.path("ch1_evidence_causes", "data", "samples_5.4_narrowed_criteria4.xlsx"))
rm(data)

##########


```

## 6. Assessing the literature that discusses the causes of biodiversity loss 

(using the full Nature corpus, the narrowed TFC corpus and the overlap between the full nature corpus and the narrowed TFC corpus) â for thematic analysis

Here the terms about criteria are used:

- [biodiv_loss_3_1](ch1_evidence_causes/input/biodiv_loss_3_1.txt){target=_blank}
- [biodiv_loss_3_2](ch1_evidence_causes/input/biodiv_loss_3_2.txt){target=_blank}
- [biodiv_loss_3_3](ch1_evidence_causes/input/biodiv_loss_3_3.txt){target=_blank}
- [biodiv_loss_3_4](ch1_evidence_causes/input/biodiv_loss_3_4.txt){target=_blank}
- [biodiv_loss_3_5](ch1_evidence_causes/input/biodiv_loss_3_5.txt){target=_blank}

These need to be `AND` with
- Nature Corpus
- Narrowed TFC Corpus
- Nature Corpus `AND` Narrowed TFC Corpus

```{r}
#| label: get_narrowed_tca_criteria_count
#| eval: !expr "calc_count"
#|


count$st_1_nat <- openalexR::oa_fetch(
    title_and_abstract.search = st_1_nat,
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

count$st_2_tca <- openalexR::oa_fetch(
    title_and_abstract.search = st_2_tca,
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

count$st_3_nat <- openalexR::oa_fetch(
    title_and_abstract.search = st_3_nat,
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count



count$biodiv_loss_nat_s_1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_1_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_s_2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_s_3 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_3_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_s_4 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_4_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_s_5 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_5_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count



count$biodiv_loss_narrowed_s_1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_1_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_narrowed_s_2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_narrowed_s_3 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_3_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_narrowed_s_1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_4_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_narrowed_s_5 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_5_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count


count$biodiv_loss_nat_narrowed_s_1 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_1_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_narrowed_s_2 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_2_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_narrowed_s_3 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_3_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_narrowed_s_4 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_4_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count
count$biodiv_loss_nat_narrowed_s_5 <- openalexR::oa_fetch(
    title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_5_st, ")")),
    count_only = TRUE,
    output = "list",
    verbose = TRUE
)$count

```

### Download Corpora

```{r}
#| label: download_corpus_6
#|

if (!file.exists(params$fn_corpus_6)) {
    corpus_6$st_1_nat <- openalexR::oa_fetch(
        title_and_abstract.search = st_1_nat,
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)

    corpus_6$st_2_tca <- openalexR::oa_fetch(
        title_and_abstract.search = st_2_tca,
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)

    corpus_6$st_3_nat <- openalexR::oa_fetch(
        title_and_abstract.search = st_3_nat,
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)



    corpus_6$biodiv_loss_nat_s_1 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_1_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_s_2 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_2_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_s_3 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_3_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_s_4 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_4_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_s_5 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_1_nat, ") AND (", biodiv_loss_3_5_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)



    corpus_6$biodiv_loss_narrowed_s_1 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_1_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_narrowed_s_2 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_2_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_narrowed_s_3 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_3_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_narrowed_s_4 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_4_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_narrowed_s_5 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_2_tca, ") AND (", biodiv_loss_3_5_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)


    corpus_6$biodiv_loss_nat_narrowed_s_1 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_1_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_narrowed_s_2 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_2_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_narrowed_s_3 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_3_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_narrowed_s_4 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_4_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)
    corpus_6$biodiv_loss_nat_narrowed_s_5 <- openalexR::oa_fetch(
        title_and_abstract.search = compact(paste0("(", st_3_nat, ") AND (", biodiv_loss_3_5_st, ")")),
        output = "dataframe",
        verbose = TRUE
    ) |>
        dplyr::distinct(id, .keep_all = TRUE)

    saveRDS(corpus_6, file = params$fn_corpus_6)
}
```


### Save the Counts
```{r}
#| label: save_count
#| eval: !expr "calc_count"
#|

saveRDS(count, params$fn_count)
```

### Export data

#### export Part 6 to Excel

```{r}
if (!file.exists(params$fn_corpus_6_xlsx)) {
    corpus_6 <- readRDS(params$fn_corpus_6)[-1]

    for (nm in names(corpus_6)) {
        corpus_6[[nm]] <- corpus_6[[nm]] |>
            dplyr::select(
                id,
                doi,
                title = display_name,
                abstract = ab,
                author,
                publication_year
            ) |>
            dplyr::mutate(
                abstract = substr(abstract, 1, 5000),
                set = nm
            )
        corpus_6[[nm]]$author_abbr <- IPBES.R::abbreviate_authors(corpus_6[[nm]])
        corpus_6[[nm]] <- corpus_6[[nm]] |>
            dplyr::select(
                id,
                doi,
                author_abbr,
                title,
                abstract,
                set
            )
    }

    all <- do.call(rbind, corpus_6) |>
        dplyr::mutate(
            set = NULL
        ) |>
        dplyr::distinct(
            id,
            .keep_all = TRUE
        )



    for (nm in names(corpus_6)) {
        corpus_6[[nm]] <- corpus_6[[nm]] |>
            dplyr::select(
                id
            ) |>
            dplyr::mutate(
                set = "X"
            )
        names(corpus_6[[nm]])[2] <- nm
    }

    all <- all |>
        dplyr::full_join(
            corpus_6$st_1_nat,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$st_2_tca,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$st_3_nat,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_s_1,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_s_2,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_s_3,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_s_4,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_s_5,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_narrowed_s_1,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_narrowed_s_2,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_narrowed_s_3,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_narrowed_s_4,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_narrowed_s_5,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_narrowed_s_1,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_narrowed_s_2,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_narrowed_s_3,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_narrowed_s_4,
            by = "id"
        ) |>
        dplyr::full_join(
            corpus_6$biodiv_loss_nat_narrowed_s_5,
            by = "id"
        )

    names(all)[-(1:5)] <- c(
        "6.1", "6.2", "6.3",
        "6.1.1", "6.1.2", "6.1.3", "6.1.4", "6.1.5",
        "6.2.1", "6.2.2", "6.2.3", "6.2.4", "6.2.5",
        "6.3.1", "6.3.2", "6.3.3", "6.3.4", "6.3.5"
    )

    writexl::write_xlsx(all, path = params$fn_corpus_6_xlsx)
    rm(all, corpus_6)
}
```

## Greate Graph

```{r}
#| label: create_plantuml_graph
#|

basename <- file.path("ch1_evidence_causes", "figures", "Ch1_evidence_causes")

nf <- list.files(
    path = dirname(basename),
    pattern = basename(basename)
) |>
    length()

if (nf < 3) {
    puml <- readLines(file.path("ch1_evidence_causes", "input", "Ch1_evidence_causes.plantuml"))

    ## 0.[1:2]]
    puml <- gsub(
        pattern = "%$%0.1%$%",
        replacement = paste0("**n = ", count$nature_corpus |> format(big.mark = ","), "**\\n---\\nnature_corpus"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%0.2%$%",
        replacement = paste0("**n = ", count$tca_corpus |> format(big.mark = ","), "**\\n---\\ntca_corpus"),
        x = puml,
        fixed = TRUE
    )

    ## 1
    puml <- gsub(
        pattern = "%$%1%$%",
        replacement = paste0("**n = ", count$ethical |> format(big.mark = ","), "**\\n---\\nethical"),
        x = puml,
        fixed = TRUE
    )

    ## 2.[1:2]
    puml <- gsub(
        pattern = "%$%2.1%$%",
        replacement = paste0("**n = ", count$concepts_1 |> format(big.mark = ","), "**\\n---\\nconcepts_1"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%2.2%$%",
        replacement = paste0("**n = ", count$concepts_2 |> format(big.mark = ","), "**\\n---\\nconcepts_2"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%2.3%$%",
        replacement = paste0("**n = ", count$concepts_1_2 |> format(big.mark = ","), "**\\n---\\nconcepts_1_2"),
        x = puml,
        fixed = TRUE
    )

    ## 3 OUTSTANDING

    ## 4.[1:2]
    puml <- gsub(
        pattern = "%$%4.1%$%",
        replacement = paste0("**n = ", count$narrowed_tca_tca |> format(big.mark = ","), "**\\n---\\nnarrowed_tca_tca"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%4.2%$%",
        replacement = paste0("**n = ", count$narrowed_tca |> format(big.mark = ","), "**\\n---\\nnarrowed_tca"),
        x = puml,
        fixed = TRUE
    )

    ## 5.[1:4]
    puml <- gsub(
        pattern = "%$%5.1%$%",
        replacement = paste0("**n = ", count$narrowed_tca_c1 |> format(big.mark = ","), "**\\n---\\nnarrowed_tca_c1"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%5.2%$%",
        replacement = paste0("**n = ", count$narrowed_tca_c2 |> format(big.mark = ","), "**\\n---\\nnarrowed_tca_c2"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%5.3%$%",
        replacement = paste0("**n = ", count$narrowed_tca_c3 |> format(big.mark = ","), "**\\n---\\nnarrowed_tca_c3"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%5.4%$%",
        replacement = paste0("**n = ", count$narrowed_tca_c4 |> format(big.mark = ","), "**\\n---\\nnarrowed_tca_c4"),
        x = puml,
        fixed = TRUE
    )

    ## 6.[1:3]
    puml <- gsub(
        pattern = "%$%6.1%$%",
        replacement = paste0("**n = ", count$st_1_nat |> format(big.mark = ","), "**\\n---\\nst_1_nat"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.2%$%",
        replacement = paste0("**n = ", count$st_2_tca |> format(big.mark = ","), "**\\n---\\nst_2_tca"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.3%$%",
        replacement = paste0("**n = ", count$st_3_nat |> format(big.mark = ","), "**\\n---\\nst_3_nat"),
        x = puml,
        fixed = TRUE
    )

    ## 6.1.[1:5]
    puml <- gsub(
        pattern = "%$%6.1.1%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_s_1 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_s_1"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.1.2%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_s_2 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_s_2"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.1.3%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_s_3 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_s_3"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.1.4%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_s_4 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_s_4"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.1.5%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_s_5 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_s_5"),
        x = puml,
        fixed = TRUE
    )

    ## 6.2.[1:5]
    puml <- gsub(
        pattern = "%$%6.2.1%$%",
        replacement = paste0("**n = ", count$biodiv_loss_narrowed_s_1 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_narrowed_s_1"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.2.2%$%",
        replacement = paste0("**n = ", count$biodiv_loss_narrowed_s_2 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_narrowed_s_2"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.2.3%$%",
        replacement = paste0("**n = ", count$biodiv_loss_narrowed_s_3 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_narrowed_s_3"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.2.4%$%",
        replacement = paste0("**n = ", count$biodiv_loss_narrowed_s_4 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_narrowed_s_4"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.2.5%$%",
        replacement = paste0("**n = ", count$biodiv_loss_narrowed_s_5 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_narrowed_s_5"),
        x = puml,
        fixed = TRUE
    )


    ## 6.3.[1:5]
    puml <- gsub(
        pattern = "%$%6.3.1%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_narrowed_s_1 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_narrowed_s_1"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.3.2%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_narrowed_s_2 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_narrowed_s_2"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.3.3%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_narrowed_s_3 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_narrowed_s_3"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.3.4%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_narrowed_s_4 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_narrowed_s_4"),
        x = puml,
        fixed = TRUE
    )
    puml <- gsub(
        pattern = "%$%6.3.5%$%",
        replacement = paste0("**n = ", count$biodiv_loss_nat_narrowed_s_5 |> format(big.mark = ","), "**\\n---\\nbiodiv_loss_nat_narrowed_s_5"),
        x = puml,
        fixed = TRUE
    )

    puml |>
        paste(collapse = "\n") |>
        plantuml::plantuml() |>
        plantuml::get_graph(
            file = file.path("ch1_evidence_causes", "figures", "Ch1_evidence_causes.pdf")
        )

    puml |>
        paste(collapse = "\n") |>
        plantuml::plantuml() |>
        plantuml::get_graph(
            file = file.path("ch1_evidence_causes", "figures", "Ch1_evidence_causes.svg")
        )

    puml |>
        paste(collapse = "\n") |>
        plantuml::plantuml() |>
        plantuml::get_graph(
            file = file.path("ch1_evidence_causes", "figures", "Ch1_evidence_causes.png")
        )
}
```


# Results

## 1. Ethical arguments for transformative change

**Subset of TCA Corpus**

How many, what percentage, and what papers in the full TC corpus?

The **Ethics Corpus**  consists of  **`r count$ethical_tca`** works, which is **`r round(100 * count$ethical_tca / count$tca_corpus, digits = 2)`%** of the TCA Corpus

## 2. Assessing broader biodiversity concepts

**Subset of OpenAlex Corpus**

The Concepts 1 Corpus (talking about biodiversity in relation to conservation, management, policy, or governance ) consists of **`r count$concepts_1`** works, which is **`r round(100 * count$concepts_1 / count$nature_corpus, digits = 2)`%** of the Nature Corpus. Of these, **`r count$concepts_1_2`** (**`r round(100 * count$concepts_1__2 / count$nature_corpus, digits = 2)`%** of Nature Corpus and **`r round(100 * count$concepts_2 / count$concept_1, digits = 2)`%** of the Concept 1 Corpus) works also talk about broader than non-human species and ecosystems.

## 3. Assessing disciplinary bias in the nature corpus

To be discussed

## 4. Narrowed TFC corpus

**Subset of TCA Corpus**

The Narrowed TFC Corpus consists of **`r count$narrowed_tca_tca`** works, which is **`r round(100 * count$narrowed_tca_tca / count$tca_corpus, digits = 2)`%** of the TCA Corpus.


**Subset of Nature Corpus**

The Narrowed Nature Corpus consists of **`r count$narrowed_tca_nature`** works, which is **`r round(100 * count$narrowed_tca_nature / count$nature_corpus, digits = 2)`%** of the Nature Corpus.

## 5. Assessing criteria in the Narrowed TFC corpus


### Criteria 1

**`r count$narrowed_tca_c1`** works in the narrowed TCA Corpus, which is **`r round(100 * count$narrowed_tca_c1 / count$narrowed_tca_tca, digits = 2)`% **of the Narrowed TCA Corpus.

### Criteria 2

**`r count$narrowed_tca_c2`** works in the narrowed TCA Corpus, which is **`r round(100 * count$narrowed_tca_c2 / count$narrowed_tca_tca, digits = 2)`%** of the Narrowed TCA Corpus.

### Criteria 3

**`r count$narrowed_tca_c3`** works in the narrowed TCA Corpus, which is **`r round(100 * count$narrowed_tca_c3 / count$narrowed_tca_tca, digits = 2)`% **of the Narrowed TCA Corpus.

### Criteria 4

**`r count$narrowed_tca_c4`** works in the narrowed TCA Corpus, which is **`r round(100 * count$narrowed_tca_c4 / count$narrowed_tca_tca, digits = 2)`%** of the Narrowed TCA Corpus.

## 6. Assessing the literature that discusses the causes of biodiversity loss 

### Nature Corpus AND `Step 1` AND `Step 2`

- **`r count$st_1_nat `** works in the Nature Corpus crossed with Step 1 and Step 2 terms, which is **`r round(100 * count$st_1_nat / count$nature_corpus, digits = 2)`%** of the Nature Corpus

There are the following numbers of wotks in the Nature Corpus:

- **`r count$biodiv_loss_nat_s_1 `** works in the Nature Corpus that discuss the `Topic 1`, which is **`r round(100 * count$biodiv_loss_nat_s_1 / count$nature_corpus, digits = 2)`%**
- **`r count$biodiv_loss_nat_s_2 `** works in the Nature Corpus that discuss the `Topic 2`, which is **`r round(100 * count$biodiv_loss_nat_s_2 / count$nature_corpus, digits = 2)`%**
- **`r count$biodiv_loss_nat_s_3 `** works in the Nature Corpus that discuss the `Topic 3`, which is **`r round(100 * count$biodiv_loss_nat_s_3 / count$nature_corpus, digits = 2)`%**
- **`r count$biodiv_loss_nat_s_4 `** works in the Nature Corpus that discuss the `Topic 4`, which is **`r round(100 * count$biodiv_loss_nat_s_4 / count$nature_corpus, digits = 2)`%**
- **`r count$biodiv_loss_nat_s_5 `** works in the Nature Corpus that discuss the `Topic 5`, which is **`r round(100 * count$biodiv_loss_nat_s_5 / count$nature_corpus, digits = 2)`%**


### Narrowed TCA Corpus AND `Step 1` AND `Step 2`

- **`r count$st_3_nat `** works in the Narrowed TCA Corpus crossed the NAture Corpus and with Step 1 and Step 2 terms, which is **`r round(100 * count$st_3_nat / count$narrowed_tca_tca, digits = 2)`%** of the Narrowed TCA Corpus

There are the following numbers of wotks in the Narrowed TCA Corpus:

- **`r count$biodiv_loss_narrowed_s_1 `** works in the Narrowed TFC Corpus that discuss the `Topic 1`, which is **`r round(100 * count$biodiv_loss_narrowed_s_1 / count$narrowed_tca_tca, digits = 2)`%**
- **`r count$biodiv_loss_narrowed_s_2 `** works in the Narrowed TFC Corpus that discuss the `Topic 2`, which is **`r round(100 * count$biodiv_loss_narrowed_s_2 / count$narrowed_tca_tca, digits = 2)`%**
- **`r count$biodiv_loss_narrowed_s_3 `** works in the Narrowed TFC Corpus that discuss the `Topic 3`, which is **`r round(100 * count$biodiv_loss_narrowed_s_3 / count$narrowed_tca_tca, digits = 2)`%**
- **`r count$biodiv_loss_narrowed_s_4 `** works in the Narrowed TFC Corpus that discuss the `Topic 4`, which is **`r round(100 * count$biodiv_loss_narrowed_s_4 / count$narrowed_tca_tca, digits = 2)`%**
- **`r count$biodiv_loss_narrowed_s_5 `** works in the Narrowed TFC Corpus that discuss the `Topic 5`, which is **`r round(100 * count$biodiv_loss_narrowed_s_5 / count$narrowed_tca_tca, digits = 2)`%**

### Nature Corpus AND Narrowed TCA Corpus AND `Step 1` AND `Step 2`

- **`r count$st_2_tca `** works in the Narrowed TCA Corpus crossed with Step 1 and Step 2 terms, which is **`r round(100 * count$st_2_tca / count$narrowed_tca_nature, digits = 2)`%** of the Narrowed TCA Corpus

There are the following numbers of wotks in the Nature Corpus AND Narrowed TCA Corpus:

- **`r count$biodiv_loss_nat_narrowed_s_1 `** works in the Nature Corpus AND Narrowed TFC Corpus that discuss the `Topic 1`, which is **`r round(100 * count$biodiv_loss_nat_narrowed_s_1 / count$narrowed_tca_nature, digits = 2)`%**
- **`r count$biodiv_loss_nat_narrowed_s_2 `** works in the Nature Corpus AND Narrowed TFC Corpus that discuss the `Topic 2`, which is **`r round(100 * count$biodiv_loss_nat_narrowed_s_2 / count$narrowed_tca_nature, digits = 2)`%**
- **`r count$biodiv_loss_nat_narrowed_s_3 `** works in the Nature Corpus AND Narrowed TFC Corpus that discuss the `Topic 3`, which is **`r round(100 * count$biodiv_loss_nat_narrowed_s_3 / count$narrowed_tca_nature, digits = 2)`%**
- **`r count$biodiv_loss_nat_narrowed_s_4 `** works in the Nature Corpus AND Narrowed TFC Corpus that discuss the `Topic 4`, which is **`r round(100 * count$biodiv_loss_nat_narrowed_s_4 / count$narrowed_tca_nature, digits = 2)`%**
- **`r count$biodiv_loss_nat_narrowed_s_5 `** works in the Nature Corpus AND Narrowed TFC Corpus that discuss the `Topic 5`, which is **`r round(100 * count$biodiv_loss_nat_narrowed_s_5 / count$narrowed_tca_nature, digits = 2)`%**


